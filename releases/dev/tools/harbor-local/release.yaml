# apiVersion: source.toolkit.fluxcd.io/v1beta2
# kind: OCIRepository
# metadata:
#   name: harbor
#   namespace: flux-system
# spec:
#   interval: 10m
#   layerSelector:
#     mediaType: "application/vnd.cncf.helm.chart.content.v1.tar+gzip"
#     operation: copy
#   url: oci://registry-1.docker.io/bitnamicharts/harbor
#   ref:
#     tag: "24.3.0"
# ---
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: harbor
#   namespace: internal
# spec:
#   releaseName: harbor
#   interval: 5m
#   chartRef:
#     kind: OCIRepository
#     name: harbor
#     namespace: flux-system
#   values:
#     proxy:
#       httpProxy: "https://registry.falahtech.com"
#     externalURL: https://registry.falahtech.com
#     adminPassword: "falah0918"
#     exposureType: proxy
#     service:
#       type: NodePort
#       ports:
#         http: 80
#         https: 443
#       nodePorts:
#         http: "31000"
#         https: "31000"
#     nginx:
#       tls:
#         enabled: false
#       resourcesPreset: micro
#     portal:
#       resourcesPreset: nano
#     core:
#       resourcesPreset: micro
#     jobservice:
#       resourcesPreset: nano
#     registry:
#       relativeurls: true
#       server:
#         resourcesPreset: micro
#       controller:
#         resourcesPreset: micro
#     trivy:
#       resourcesPreset: nano
#     persistence:
#       persistentVolumeClaim:
#         registry:
#           storageClass: longhorn
#           size: 50Gi
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: harbor
  namespace: flux-system
spec:
  interval: 10m
  layerSelector:
    mediaType: "application/vnd.cncf.helm.chart.content.v1.tar+gzip"
    operation: copy
  url: oci://registry-1.docker.io/bitnamicharts/harbor
  ref:
    tag: "24.3.0"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: harbor
  namespace: internal
spec:
  releaseName: harbor
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: harbor
    namespace: flux-system
  values:
    adminPassword: "falah0918"
    externalURL: https://registry.falahtech.com
    exposureType: ingress
    ingress:
      core:
        ingressClassName: "nginx"
        hostname: registry.falahtech.com
        annotations:
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        extraTls:
          - hosts:
              - registry.falahtech.com
            secretName: harbor-tls-secret
    portal:
      resourcesPreset: nano
    core:
      resourcesPreset: micro
    jobservice:
      resourcesPreset: nano
    registry:
      relativeurls: true
      server:
        resourcesPreset: micro
      controller:
        resourcesPreset: micro
    trivy:
      resourcesPreset: nano
    persistence:
      persistentVolumeClaim:
        registry:
          storageClass: longhorn
          size: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: harbor-nodeport
  namespace: internal
spec:
  type: NodePort
  selector:
    app.kubernetes.io/component: core
    app.kubernetes.io/instance: harbor
    app.kubernetes.io/name: harbor
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 31000
    - name: https
      port: 443
      targetPort: 443
      nodePort: 31001
